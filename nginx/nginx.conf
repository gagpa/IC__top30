worker_processes auto;
pid /run/nginx.pid;

events {
  worker_connections 2048;
  use epoll;
}

http {
  include /etc/nginx/mime.types;
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache:10m max_size=100m;
  proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";

  # TODO: connect through socket files with fail_timeout=0 ?

  upstream api_hosts {
    least_conn;
    server api:8000;
  }

  upstream postgrest_hosts {
    least_conn;
    server postgrest:8080;
  }

  upstream swaggerui_host {
    least_conn;
    server swagger:8080;
  }

  server {
    listen 8080 default_server;
    include conf/server.inc;

    # Backend
    location /api {
      proxy_pass http://api_hosts;
      proxy_cache off;

      include conf/proxy.inc;
    }

    # CRUD
    location /crud/ {
      proxy_pass http://postgrest_hosts/;
      proxy_cache off;

      include conf/proxy.inc;
    }

    # CRUD SWAGGER
    location /crud/swagger {
      proxy_pass http://swaggerui_host/;
    }

    # CRUD SWAGGER Resources
    # TODO: refactor with regex and 'rewrite'
    location /crud/swagger-ui.css {
        proxy_pass http://swaggerui_host/swagger-ui.css;
        expires 7d;
        add_header Cache-Control "public";
    }
    location /crud/swagger-initializer.js {
        proxy_pass http://swaggerui_host/swagger-initializer.js;
        expires 7d;
        add_header Cache-Control "public";
    }
    location /crud/swagger-ui-bundle.js {
        proxy_pass http://swaggerui_host/swagger-ui-bundle.js;
        expires 7d;
        add_header Cache-Control "public";
    }
    location /crud/swagger-ui-standalone-preset.js {
        proxy_pass http://swaggerui_host/swagger-ui-standalone-preset.js;
        expires 7d;
        add_header Cache-Control "public";
    }
  }
}
