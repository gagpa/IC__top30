"""

Revision ID: ba34184010fa
Revises: 
Create Date: 2022-05-12 16:06:03.012671

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ba34184010fa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'configs',
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('config_id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('config_id'),
    )
    op.create_index(op.f('ix_configs_config_id'), 'configs', ['config_id'], unique=False)
    op.create_index(op.f('ix_configs_name'), 'configs', ['name'], unique=True)
    op.create_table(
        'users',
        sa.Column('name', sa.String(length=60), nullable=False),
        sa.Column('email', sa.String(length=50), nullable=False),
        sa.Column('refresh_token', sa.Text(), nullable=True),
        sa.Column('password', sa.LargeBinary(), nullable=False),
        sa.Column('type', sa.String(length=50), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.CheckConstraint(
            'octet_length(password) BETWEEN 59 AND 60', name='password_simple_bcrypt_check'
        ),
        sa.PrimaryKeyConstraint('user_id'),
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table(
        'coaches',
        sa.Column('coach_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['coach_id'],
            ['users.user_id'],
        ),
        sa.PrimaryKeyConstraint('coach_id'),
    )
    op.create_table(
        'students',
        sa.Column('student_id', sa.Integer(), nullable=False),
        sa.Column('coach_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['coach_id'],
            ['coaches.coach_id'],
        ),
        sa.ForeignKeyConstraint(
            ['student_id'],
            ['users.user_id'],
        ),
        sa.PrimaryKeyConstraint('student_id'),
    )
    op.create_table(
        'meetings',
        sa.Column('coach_id', sa.Integer(), nullable=True),
        sa.Column('student_id', sa.Integer(), nullable=True),
        sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
        sa.Column('duration', sa.Integer(), nullable=True),
        sa.Column('meeting_id', sa.Integer(), nullable=False),
        sa.CheckConstraint('duration in (60, 120)', name='meeting_duration_check'),
        sa.ForeignKeyConstraint(
            ['coach_id'],
            ['coaches.coach_id'],
        ),
        sa.ForeignKeyConstraint(
            ['student_id'],
            ['students.student_id'],
        ),
        sa.PrimaryKeyConstraint('meeting_id'),
        sa.UniqueConstraint('coach_id', 'start_time', name='unique_time_for_coach_check'),
        sa.UniqueConstraint('student_id', 'start_time', name='unique_time_for_student_check'),
    )
    op.create_index(op.f('ix_meetings_meeting_id'), 'meetings', ['meeting_id'], unique=False)
    op.create_index(
        'meeting_pair_search_index', 'meetings', ['student_id', 'coach_id'], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('meeting_pair_search_index', table_name='meetings')
    op.drop_index(op.f('ix_meetings_meeting_id'), table_name='meetings')
    op.drop_table('meetings')
    op.drop_table('students')
    op.drop_table('coaches')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_configs_name'), table_name='configs')
    op.drop_index(op.f('ix_configs_config_id'), table_name='configs')
    op.drop_table('configs')
    # ### end Alembic commands ###
