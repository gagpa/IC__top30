version: "3.4"

networks:
  default:

# TODO: simplify this config with anchors

services:
  api:
    container_name: top30-api
    build:
      context: .
      dockerfile: deployment/server/Dockerfile
      target: dev
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
        RUN_LEVEL: dev
        PYTHON_VERSION: "3.9"
    networks:
      - default
    volumes:
      - .:/opt/app
    restart: unless-stopped
    env_file:
      - .env.local
    depends_on:
      - postgres
      - redis
      - postgrest

  nginx:
    build:
      context: nginx
    container_name: top30-nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/conf:/etc/nginx/conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - swagger
      - postgrest
    networks:
      - default

  postgrest:
    container_name: top30-postgrest
    image: postgrest/postgrest
    networks:
      - default
    env_file:
      - .env.local
    environment:
      - PGRST_DB_URI=postgres://user:password@postgres:5432/top
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=user
      - PGRST_SERVER_PORT=8080
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:8080/crud
    depends_on:
      - postgres

  swagger:
    container_name: top30-swagger
    image: swaggerapi/swagger-ui
    networks:
      - default
    environment:
      API_URL: http://localhost:8080/crud
    depends_on:
      - postgrest

  postgres:
    container_name: top30-postgres
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: top
    networks:
      - default
    volumes:
      - ./.docker_data/postgres:/var/lib/postgresql/data

  redis:
    container_name: top30-redis
    image: library/redis:6
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - default
    volumes:
    - ./.docker_data/redis:/var/lib/redis
